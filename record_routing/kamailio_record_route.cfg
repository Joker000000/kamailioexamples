#!KAMAILIO

####### Defined Values #########

#!substdef "!MY_IP_ADDR!<pvt_ip>!g"
#!substdef "!MY_EXTERNAL_IP!1<public_ip>!g"
#!substdef "!MY_UDP_PORT!5060!g"
#!substdef "!MY_TCP_PORT!5060!g"
#!substdef "!MY_UDP_ADDR!udp:MY_IP_ADDR:MY_UDP_PORT!g"
#!substdef "!MY_TCP_ADDR!tcp:MY_IP_ADDR:MY_TCP_PORT!g"

# Relay All requests and replys set flags 

# ----------- global configuration parameters ------------------------

debug=2         # debug level (cmd line: -dddddddddd)

#fork=yes
#log_stderror=no        # (cmd line: -E)
fork=no
log_stderror=yes

#check_via=no   # (cmd. line: -v)
#dns=no          # (cmd. line: -r)
#rev_dns=no      # (cmd. line: -R)

children=4
#fifo="/tmp/ser_fifo"

log_facility=LOG_LOCAL0
log_prefix="{$mt $hdr(CSeq) $ci} "

#listen=kamailio_pvtip
port=5060
mpath = "/usr/local/lib64/kamailio/modules/:/usr/lib/x86_64-linux-gnu/kamailio/modules/"

listen = MY_UDP_ADDR advertise MY_EXTERNAL_IP:MY_UDP_PORT
listen = MY_TCP_ADDR advertise MY_EXTERNAL_IP:MY_TCP_PORT

# ------------------ module loading ----------------------------------

loadmodule "tm.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"
loadmodule "xlog.so"
        
# ----------------- setting module-specific parameters ---------------
             
# -- usrloc params -- 
#modparam("usrloc", "db_mode",   0)

# -- rr params --
modparam("rr", "enable_full_lr", 1)

# -- xlog params
modparam("xlog", "force_color", 0)
modparam("xlog", "long_format", 1)

# -------------------------  request routing logic -------------------

# main routing logic

route{

    setflag(1);
    t_on_failure("1");
    t_on_reply("1");
    xlog("L_INFO", "SIP PACKET $rm $ci $ct from Source $si:$sp - Received on $Ri:$Rp \n");

    $du = "sip:666@127.0.0.1:5069";
    xlog(" r-uri ($ru) form $fu desntination $du \n");

    #sl_send_reply("483","Bye there ");
    remove_hf("Route");
    if (is_method("INVITE")) {
            record_route();
    }

    if (!t_relay())
    {
        sl_reply_error(); 
        break; 
    };
    break;

}

onreply_route[1]
{
	log(1, "onreply");
}

failure_route[1]
{
    log(1, "failure");

}